image: rajeshsupreet/terraform-azure-cli:latest

stages:
  - prepare
  - init
  - apply

variables:
  NODE_VERSION: "18.9.0"
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  PROJECT_NAME: "{{project_name}}"
  SHORT_PROJECT_NAME: "{{short_project_name}}"

.prepare_template: &prepare
  stage: prepare
  script:
    - apt-get update -y && apt-get install -y python3-setuptools
    - python3 -m pip install --user awscli
    - echo "client_id=\"$ARM_CLIENT_ID\"" >> ./terraform/terraform.tfvars
    - echo "client_secret=\"$ARM_CLIENT_SECRET\"" >> ./terraform/terraform.tfvars
    - echo "tenant_id=\"$ARM_TENANT_ID\"" >> ./terraform/terraform.tfvars
    - echo "subscription_id=\"$ARM_SUBSCRIPTION_ID\"" >> ./terraform/terraform.tfvars
    - echo "PROJECT_NAME=\"$PROJECT_NAME\"" >> ./terraform/terraform.tfvars
    - echo "SHORT_PROJECT_NAME=\"$SHORT_PROJECT_NAME\"" >> ./terraform/terraform.tfvars
    - echo "stage=\"$STAGE\"" >> ./terraform/terraform.tfvars

prepare:dev:
  <<: *prepare
  variables:
    STAGE: "dev"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'

prepare:np:
  <<: *prepare
  variables:
    STAGE: "np"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "np"'

prepare:master:
  <<: *prepare
  variables:
    STAGE: "prod"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

init:
  stage: init
  script:
    - bash shell_run.sh -f "shell_tf_init.sh" -v "shell_tf_env.sh"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev" || $CI_COMMIT_REF_NAME == "np" || $CI_COMMIT_REF_NAME == "master"'

apply:
  stage: apply
  script:
    - terraform apply -auto-approve
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev" || $CI_COMMIT_REF_NAME == "np" || $CI_COMMIT_REF_NAME == "master"'
